<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>